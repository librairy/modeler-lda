<!--
  ~ Copyright (c) 2016. Universidad Politecnica de Madrid
  ~
  ~ @author Badenes Olmedo, Carlos <cbadenes@fi.upm.es>
  ~
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

	<groupId>org.librairy</groupId>
    <artifactId>librairy-modeler-lda</artifactId>
    <version>1.8.3.4</version>
    <packaging>jar</packaging>
    <name>modeler-lda</name>
    <description>Create Topic Models for a given domain</description>
    <url>https://github.com/librairy/modeler-lda</url>
    <organization>
        <name>Ontology Engineering Group</name>
        <url>http://www.oeg-upm.net</url>
    </organization>
    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0</url>
        </license>
    </licenses>
    <inceptionYear>2017</inceptionYear>
    <scm>
        <url>https://github.com/librairy/modeler-lda</url>
    </scm>
    <developers>
        <developer>
            <id>cbadenes</id>
            <name>Carlos Badenes Olmedo</name>
            <email>cbadenes at fi.upm.es</email>
        </developer>
    </developers>
    <prerequisites>
        <maven>3.0.0</maven>
    </prerequisites>
	<properties>
        <docker.image.prefix>librairy</docker.image.prefix>

        <!-- Project Details -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.java.version>1.8</project.java.version>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- Maven Plugins -->
        <maven.appassembler.plugin.version>1.9</maven.appassembler.plugin.version>
        <maven.assembly.plugin.version>2.5.5</maven.assembly.plugin.version>
        <maven.compiler.plugin.version>3.3</maven.compiler.plugin.version>
        <maven.jar.plugin.version>2.6</maven.jar.plugin.version>
        <maven.site.plugin.version>0.10</maven.site.plugin.version>
        <maven.scala.version>2.15.2</maven.scala.version>
        <maven.surefire.plugin.version>2.11</maven.surefire.plugin.version>
        <maven.war.plugin.version>2.6</maven.war.plugin.version>
        <maven.resources.plugin.version>2.7</maven.resources.plugin.version>
        <surefire.junit.version>2.12</surefire.junit.version>

        <!-- Project Dependencies -->
        <!--<breeze.version>0.13.1</breeze.version>&lt;!&ndash; 0.11.2&ndash;&gt;-->
        <commons-lang3.version>3.5</commons-lang3.version>
        <junit.version>4.12</junit.version>
        <librairy.metrics.version>1.18</librairy.metrics.version>
        <librairy.computing.version>1.1.1</librairy.computing.version>
        <librairy.boot.version>1.8.5.2</librairy.boot.version>
        <logback.version>1.1.3</logback.version>
        <mockito.version>1.9.5</mockito.version>
        <parquet.version>1.7.0</parquet.version>
        <scala.version>2.10.5</scala.version>
        <scalatest.version>2.2.4</scalatest.version>
        <spark.graphframes.version>0.3.0-spark1.6-s_2.10</spark.graphframes.version>
        <spark.csv.version>1.5.0</spark.csv.version>
        <testutils.version>1.0.0</testutils.version>
    </properties>


    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.3.RELEASE</version>
    </parent>

    <dependencyManagement>
        <dependencies>

            <!-- Scala Version -->
            <dependency>
                <groupId>org.scala-lang</groupId>
                <artifactId>scalap</artifactId>
                <version>${scala.version}</version>
            </dependency>
            <dependency>
                <groupId>org.scala-lang</groupId>
                <artifactId>scala-library</artifactId>
                <version>${scala.version}</version>
            </dependency>
            <dependency>
                <groupId>org.scala-lang</groupId>
                <artifactId>scala-compiler</artifactId>
                <version>${scala.version}</version>
            </dependency>
            <dependency>
                <groupId>org.scala-lang</groupId>
                <artifactId>scala-reflect</artifactId>
                <version>${scala.version}</version>
            </dependency>

            <!-- librairy boot dependencyManagement -->
            <dependency>
                <groupId>org.librairy</groupId>
                <artifactId>librairy-boot</artifactId>
                <version>${librairy.boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.librairy</groupId>
                <artifactId>librairy-boot</artifactId>
                <version>${librairy.boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.librairy</groupId>
                <artifactId>librairy-metrics</artifactId>
                <version>${librairy.metrics.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.librairy</groupId>
                <artifactId>librairy-metrics</artifactId>
                <version>${librairy.metrics.version}</version>
            </dependency>
            <dependency>
                <groupId>org.librairy</groupId>
                <artifactId>librairy-computing</artifactId>
                <version>${librairy.computing.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.librairy</groupId>
                <artifactId>librairy-computing</artifactId>
                <version>${librairy.computing.version}</version>
            </dependency>

            <!-- Apache Parquet -->
            <dependency>
                <groupId>org.apache.parquet</groupId>
                <artifactId>parquet-hadoop</artifactId>
                <version>${parquet.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.parquet</groupId>
                <artifactId>parquet-column</artifactId>
                <version>${parquet.version}</version>
            </dependency>

            <!-- Log Libraries -->
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-core</artifactId>
                <version>${logback.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang3.version}</version>
            </dependency>

            <!-- Unit tests Libraries -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-all</artifactId>
                <version>${mockito.version}</version>
            </dependency>
            <dependency>
                <groupId>es.cbadenes.lab</groupId>
                <artifactId>test-utils</artifactId>
                <version>${testutils.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-test</artifactId>
                <version>${spring.version}</version>
            </dependency>

            <!-- Spark GraphFrames -->
            <dependency>
                <groupId>graphframes</groupId>
                <artifactId>graphframes</artifactId>
                <version>${spark.graphframes.version}</version>
            </dependency>
            <dependency>
                <groupId>com.databricks</groupId>
                <artifactId>spark-csv_2.10</artifactId>
                <version>${spark.csv.version}</version>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <dependencies>

        <!-- Internal Dependencies -->
        <dependency>
            <groupId>org.librairy</groupId>
            <artifactId>librairy-boot</artifactId>
        </dependency>
        <dependency>
            <groupId>org.librairy</groupId>
            <artifactId>librairy-metrics</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>log4j</groupId>
                    <artifactId>log4j</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-log4j12</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>log4j-over-slf4j</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.librairy</groupId>
            <artifactId>librairy-computing</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>log4j</groupId>
                    <artifactId>log4j</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-log4j12</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>log4j-over-slf4j</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Spark GraphFrames -->
        <dependency>
            <groupId>graphframes</groupId>
            <artifactId>graphframes</artifactId>
        </dependency>
        <dependency>
            <groupId>com.databricks</groupId>
            <artifactId>spark-csv_2.10</artifactId>
        </dependency>

        <!-- Unit tests -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>es.cbadenes.lab</groupId>
            <artifactId>test-utils</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Spring -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
            <!--<scope>provided</scope>-->
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Logging -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
        </dependency>

        <!-- TEST: Scala -->
        <dependency>
            <groupId>org.scalatest</groupId>
            <artifactId>scalatest_2.10</artifactId>
            <version>${scalatest.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.typesafe.scala-logging</groupId>
            <artifactId>scala-logging-slf4j_2.10</artifactId>
            <version>2.1.2</version>
        </dependency>

        <!-- Test ML-->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-text</artifactId>
            <version>1.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>cc.mallet</groupId>
            <artifactId>mallet</artifactId>
            <version>2.0.8</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <finalName>modeler-lda</finalName>
        <plugins>

            <!-- Maven Compiler Plugin -->
            <plugin>
                <groupId>org.scala-tools</groupId>
                <artifactId>maven-scala-plugin</artifactId>
                <version>${maven.scala.version}</version>
                <executions>
                    <execution>
                        <id>scala-compile</id>
                        <goals>
                            <goal>compile</goal>
                            <goal>testCompile</goal>
                        </goals>
                        <phase>process-resources</phase>
                        <configuration>
                            <args>
                                <arg>-dependencyfile</arg>
                                <arg>${project.build.directory}/.scala_dependencies</arg>
                            </args>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.plugin.version}</version>
                <configuration>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <source>${project.java.version}</source>
                    <target>${project.java.version}</target>
                    <compilerVersion>${project.java.version}</compilerVersion>
                </configuration>
            </plugin>

            <!-- Maven Test Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven.surefire.plugin.version}</version>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.maven.surefire</groupId>
                        <artifactId>surefire-junit47</artifactId>
                        <version>${surefire.junit.version}</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <!--<argLine>-Xmx5024m</argLine>-->
                    <includes>
                        <include>**/*.class</include>
                    </includes>
                    <excludedGroups>es.cbadenes.lab.test.IntegrationTest</excludedGroups>
                    <systemPropertyVariables>
                        <logback.configurationFile>${basedir}/src/test/resources/logback.xml</logback.configurationFile>
                    </systemPropertyVariables>
                    <skipTests>true</skipTests>
                </configuration>
            </plugin>


            <!-- Spring-Boot Unique Jar -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <!-- Docker Plugin -->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.4.11</version>
                <configuration>
                    <imageName>${docker.image.prefix}/${project.name}</imageName>
                    <serverId>dockerhub</serverId>
                    <dockerDirectory>src/main/docker</dockerDirectory>
                    <resources>
                        <resource>
                            <targetPath>/</targetPath>
                            <directory>${project.build.directory}</directory>
                            <include>${project.build.finalName}.jar</include>
                        </resource>
                    </resources>
                    <forceTags>true</forceTags>
                    <imageTags>
                        <imageTag>${project.version}</imageTag>
                        <imageTag>latest</imageTag>
                    </imageTags>
                </configuration>
            </plugin>
			
			<!-- Github Deploy -->
			            <plugin>
			                <artifactId>maven-deploy-plugin</artifactId>
			                <version>2.8.1</version>
			                <configuration>
			                    <altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo</altDeploymentRepository>
			                </configuration>
			            </plugin>
			            <plugin>
			                <groupId>org.apache.maven.plugins</groupId>
			                <artifactId>maven-site-plugin</artifactId>
			                <version>3.3</version>
			                <configuration>
			                    <skipDeploy>true</skipDeploy>
			                </configuration>
			            </plugin>
			            <plugin>
			                <groupId>com.github.github</groupId>
			                <artifactId>site-maven-plugin</artifactId>
			                <version>0.12</version>
			                <executions>
			                    <execution>
			                        <id>jar-deploy</id>
			                        <goals>
			                            <goal>site</goal>
			                        </goals>
			                        <phase>deploy</phase>
			                        <configuration>
			                            <message>Library of ${project.version}</message>
			                            <noJekyll>true</noJekyll>
			                            <outputDirectory>${project.build.directory}/mvn-repo</outputDirectory>
			                            <branch>refs/heads/mvn-repo</branch>
			                            <includes><include>**/*</include></includes>
			                            <merge>true</merge>
			                            <repositoryName>modeler-lda</repositoryName>
			                            <repositoryOwner>librairy</repositoryOwner>
			                            <server>github</server>
			                        </configuration>
			                    </execution>
			                </executions>
			            </plugin>

        </plugins>
    </build>


    <repositories>

        <!-- External Libraries -->
        <repository>
            <id>external-libs</id>
            <url>https://raw.github.com/cbadenes/external-libs/mvn-repo/</url>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>always</updatePolicy>
            </snapshots>
        </repository>

        <!-- Test Utils Repository -->
        <repository>
            <id>test-utils</id>
            <url>https://raw.github.com/cbadenes/test-utils/mvn-repo/</url>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>always</updatePolicy>
            </snapshots>
        </repository>

        <!-- Librairy Repositories -->
        <repository>
            <id>librairy-boot-repo</id>
            <url>https://raw.github.com/librairy/boot/mvn-repo/</url>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>always</updatePolicy>
            </snapshots>
        </repository>
        <repository>
            <id>librairy-computing-repo</id>
            <url>https://raw.github.com/librairy/computing/mvn-repo/</url>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>always</updatePolicy>
            </snapshots>
        </repository>
        <repository>
            <id>librairy-metrics-repo</id>
            <url>https://raw.github.com/librairy/metrics/mvn-repo/</url>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>always</updatePolicy>
            </snapshots>
        </repository>

    </repositories>


    <!-- Report -->
    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>2.8</version>
                <configuration>
                    <dependencyLocationsEnabled>false</dependencyLocationsEnabled>
                </configuration>
            </plugin>
            <!-- Provides static analysis on source files -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>2.17</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>checkstyle</report>
                        </reports>
                    </reportSet>
                </reportSets>
                <configuration>
                    <configLocation>https://raw.githubusercontent.com/librairy/resources/master/code/rules.xml</configLocation>
                </configuration>
            </plugin>
            <!-- Provides static analysis on source files -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <version>3.0.3</version>
                <configuration>
                    <xmlOutput>true</xmlOutput>
                </configuration>
            </plugin>
            <!-- Provides code coverage during Unit Test (test) phase -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cobertura-maven-plugin</artifactId>
                <version>2.7</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>cobertura</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
            <!--  Bundles JavaDocs into the reporting structure -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.10.3</version>
                <configuration>
                    <failOnError>false</failOnError>
                </configuration>
            </plugin>
            <!-- Searches source code for specific words like TODO and FIXME, then collates them into a report per project -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>taglist-maven-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <tagListOptions>
                        <tagClasses>
                            <tagClass>
                                <displayName>Todo Work</displayName>
                                <tags>
                                    <tag>
                                        <matchString>todo</matchString>
                                        <matchType>ignoreCase</matchType>
                                    </tag>
                                    <tag>
                                        <matchString>FIXME</matchString>
                                        <matchType>exact</matchType>
                                    </tag>
                                </tags>
                            </tagClass>
                        </tagClasses>
                    </tagListOptions>
                </configuration>
            </plugin>
            <!-- -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <version>2.2</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>dependency-updates-report</report>
                            <report>plugin-updates-report</report>
                            <report>property-updates-report</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
        </plugins>
    </reporting>

</project>
